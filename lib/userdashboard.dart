import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:firebase_database/firebase_database.dart';
import 'package:flutter_bounceable/flutter_bounceable.dart';
import 'package:flutter_neumorphic/flutter_neumorphic.dart';
import 'package:flutter_svg/flutter_svg.dart';
import 'package:font_awesome_flutter/font_awesome_flutter.dart';
import 'package:geocoding/geocoding.dart' as geocoding;
import 'package:geolocator/geolocator.dart' as geolocator;
import 'package:google_fonts/google_fonts.dart';
import 'package:map_launcher/map_launcher.dart';
import 'package:modal_bottom_sheet/modal_bottom_sheet.dart';
import 'package:auto_size_text/auto_size_text.dart';
import 'package:washungrystable/customwidgets.dart';
import 'package:washungrystable/give_process/scanFood.dart';
import 'package:washungrystable/give_process/searchFood.dart';
import 'package:washungrystable/test.dart';
import 'package:washungrystable/get_process/maps.dart';
import 'package:washungrystable/load_nearby_donations.dart';
import 'package:washungrystable/give_process/add_info.dart';
import 'package:washungrystable/messaging/message_list.dart';
import 'dart:async';
import 'package:location/location.dart';

class UserDashboard extends StatefulWidget {
  const UserDashboard({Key? key}) : super(key: key);

  @override
  _UserDashboardState createState() => _UserDashboardState();
}

//Global user data variables. Generated by getUserData()
String firstName = "";
String lastName = "";
int donationsCompleted = 0;
int foodSaved = 0;
int hoursVolunteered = 0;
int peopleHelped = 0;
int rating = 0;
String currentUID = "";
double? longitude;
double? latitude;
geocoding.Placemark? place;
String? fcmToken;
bool isButtonEnabled = false;
int selectedIndex = 0;
String? docID;
Timer? timer;

@override
class _UserDashboardState extends State<UserDashboard>
    with WidgetsBindingObserver {
  var onlineDonationsStream = FirebaseFirestore.instance
      .collection('donations')
      .where('uid', isEqualTo: FirebaseAuth.instance.currentUser!.uid)
      .where('status', isEqualTo: 'Online')
      .snapshots();
  var completedDonationsStream = FirebaseFirestore.instance
      .collection('donations')
      .where('uid', isEqualTo: FirebaseAuth.instance.currentUser!.uid)
      .where('status', isEqualTo: 'Completed')
      .snapshots();
  var completedReceiptsStream = FirebaseFirestore.instance
      .collection('donations')
      .where('dUid', isEqualTo: FirebaseAuth.instance.currentUser!.uid)
      .where('status', isEqualTo: 'Completed')
      .snapshots();

  var awaitingApprovalDonationsStream = FirebaseFirestore.instance
      .collection('donations')
      .where('uid', isEqualTo: FirebaseAuth.instance.currentUser!.uid)
      .where('status', isEqualTo: 'AwaitingApproval')
      .snapshots();

  var inProgressDonationsStream = FirebaseFirestore.instance
      .collection('donations')
      .where('uid', isEqualTo: FirebaseAuth.instance.currentUser!.uid)
      .where('status', isEqualTo: 'InProgress')
      .snapshots();

  var onlineReceiptsStream = FirebaseFirestore.instance
      .collection('donations')
      .where('dUid', isEqualTo: FirebaseAuth.instance.currentUser!.uid)
      .where('status', isEqualTo: 'Online')
      .snapshots();

  var awaitingApprovalReceiptsStream = FirebaseFirestore.instance
      .collection('donations')
      .where('dUid', isEqualTo: FirebaseAuth.instance.currentUser!.uid)
      .where('status', isEqualTo: 'AwaitingApproval')
      .snapshots();

  var inProgressReceiptsStream = FirebaseFirestore.instance
      .collection('donations')
      .where('dUid', isEqualTo: FirebaseAuth.instance.currentUser!.uid)
      .where('status', isEqualTo: 'InProgress')
      .snapshots();
  DatabaseReference userStatus = FirebaseDatabase.instance.ref(
      'users/${FirebaseAuth.instance.currentUser!.uid}/isCheckingLocation');

  Location locationTracker = Location();
  String? isCheckingLocation;

  _onItemTapped(int index) {
    setState(
      () {
        selectedIndex = index;
      },
    );
  }

  requestPermissions() async {
    bool _serviceEnabled;
    PermissionStatus _permissionGranted;

    _serviceEnabled = await locationTracker.serviceEnabled();
    if (!_serviceEnabled) {
      _serviceEnabled = await locationTracker.requestService();
      if (!_serviceEnabled) {
        return;
      }
    }

    _permissionGranted = await locationTracker.hasPermission();
    if (_permissionGranted == PermissionStatus.denied) {
      _permissionGranted = await locationTracker.requestPermission();
      if (_permissionGranted != PermissionStatus.granted) {
        return;
      }
      if (_permissionGranted == PermissionStatus.granted ||
          _permissionGranted == PermissionStatus.grantedLimited) {}
    }

    await locationTracker
        .changeSettings(
          accuracy: LocationAccuracy.high,
          distanceFilter: 50,
        )
        .then(
          (value) async => {
            await locationTracker.enableBackgroundMode(enable: true),
            getLocation(),
          },
        );
  }

  getUserData() {
    FirebaseFirestore.instance
        .collection("userNames")
        .where("uid", isEqualTo: FirebaseAuth.instance.currentUser?.uid)
        .snapshots()
        .listen((result) {
      for (var result in result.docs) {
        setState(() {
          docID = result.id;
          firstName = result["firstName"];
          lastName = result["lastName"];
          donationsCompleted = result["donationsCompleted"];
          foodSaved = result["foodSaved"];
          hoursVolunteered = result["hoursVolunteered"];
          peopleHelped = result["peopleHelped"];
          rating = result["rating"];
          currentUID = FirebaseAuth.instance.currentUser!.uid;
        });
      }
    });
  }

  getLocation() {
    locationTracker.onLocationChanged.listen(
      (LocationData currentLocation) async {
        List<geocoding.Placemark> placemarks =
            await geocoding.placemarkFromCoordinates(
          currentLocation.latitude!.toDouble(),
          currentLocation.longitude!.toDouble(),
        );
        latitude = currentLocation.latitude;
        longitude = currentLocation.longitude;
        place = placemarks[0];
        isButtonEnabled = true;
        setState(() {});

        userStatus.onValue.listen(
          (DatabaseEvent event) async {
            setState(
              () {
                if (event.snapshot.value.toString() == "true") {
                  setState(
                    () {
                      FirebaseDatabase.instance
                          .ref(
                              "users/${FirebaseAuth.instance.currentUser!.uid}/")
                          .update(
                        {
                          'latitude': latitude,
                          'longitude': longitude,
                          'heading': currentLocation.heading,
                          'accuracy': currentLocation.accuracy,
                        },
                      );
                    },
                  );
                } else {
                  print("Location is not being tracked");
                }
              },
            );
          },
        );
      },
    );
  }

  @override
  initState() {
    getUserData();
    requestPermissions();
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    locationTracker.enableBackgroundMode(enable: true);
    final List _widgetOptions = [
      SafeArea(
        child: Padding(
          padding: const EdgeInsets.only(
            left: 30,
            top: 30,
            right: 30,
          ),
          child: ListView(
            physics: const BouncingScrollPhysics(),
            children: [
              AutoSizeText(
                'Hello, $firstName',
                maxLines: 1,
                style: TextStyle(
                  color: CustomColors.textColor,
                  fontFamily: "RecoletaB",
                  fontSize: 60,
                  fontWeight: FontWeight.bold,
                ),
              ),
              AutoSizeText(
                'What would you like to do?',
                maxLines: 1,
                style: GoogleFonts.poppins(
                  color: CustomColors.textColor,
                  fontSize: 20,
                  fontWeight: FontWeight.w300,
                ),
              ),
              const SizedBox(
                height: 20,
              ),
              Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  Bounceable(
                    onTap: () {
                      showModalBottomSheet(
                        context: context,
                        builder: (BuildContext context) {
                          return SafeArea(
                            child: SingleChildScrollView(
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    top: 40, left: 30, right: 50),
                                child: Column(
                                  crossAxisAlignment: CrossAxisAlignment.start,
                                  mainAxisAlignment: MainAxisAlignment.start,
                                  children: [
                                    Text(
                                      'Give',
                                      style: TextStyle(
                                        fontFamily: "Recoleta",
                                        color: CustomColors.textColor,
                                        fontSize: 40,
                                        fontWeight: FontWeight.w700,
                                      ),
                                    ),
                                    const SizedBox(
                                      height: 10,
                                    ),
                                    GestureDetector(
                                      onTap: () {
                                        Navigator.of(context).push(
                                          MaterialPageRoute(
                                            builder: (context) =>
                                                const ScanFood(),
                                          ),
                                        );
                                      },
                                      child: AutoSizeText(
                                        'Scan item barcode',
                                        maxLines: 1,
                                        style: GoogleFonts.poppins(
                                          color: CustomColors.textColor,
                                          fontSize: 24,
                                          fontWeight: FontWeight.w600,
                                        ),
                                      ),
                                    ),
                                    const SizedBox(
                                      height: 5,
                                    ),
                                    GestureDetector(
                                      onTap: () {
                                        Navigator.of(context).push(
                                          MaterialPageRoute(
                                            builder: (context) =>
                                                const SearchFood(),
                                          ),
                                        );
                                      },
                                      child: AutoSizeText(
                                        "Search item",
                                        maxLines: 1,
                                        style: GoogleFonts.poppins(
                                          color: CustomColors.textColor,
                                          fontSize: 24,
                                          fontWeight: FontWeight.w600,
                                        ),
                                      ),
                                    ),
                                    const SizedBox(
                                      height: 20,
                                    ),
                                  ],
                                ),
                              ),
                            ),
                          );
                        },
                      );
                    },
                    child: Container(
                      width: MediaQuery.of(context).size.width / 2.45,
                      height: MediaQuery.of(context).size.width / 2.45,
                      decoration: BoxDecoration(
                        color: CustomColors.primary,
                        borderRadius: BorderRadius.circular(20),
                        gradient: const LinearGradient(
                          begin: Alignment.topRight,
                          end: Alignment.bottomLeft,
                          colors: [
                            Color(0xffa29bfe),
                            Color(0xff6c5ce7),
                          ],
                        ),
                      ),
                      child: Neumorphic(
                        style: NeumorphicStyle(
                          shape: NeumorphicShape.convex,
                          depth: 20,
                          surfaceIntensity: 1,
                          boxShape: NeumorphicBoxShape.roundRect(
                            BorderRadius.circular(12),
                          ),
                          lightSource: LightSource.topLeft,
                          color: const Color(0xff6c5ce7),
                        ),
                        child: Center(
                          child: Text(
                            'Give',
                            style: GoogleFonts.poppins(
                              color: Colors.white,
                              fontSize: 35,
                              fontWeight: FontWeight.w400,
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  Bounceable(
                    onTap: () {
                      Navigator.of(context).push(
                        MaterialPageRoute(
                          builder: (context) => const NearbyDonations(),
                        ),
                      );
                    },
                    child: Container(
                      width: MediaQuery.of(context).size.width / 2.45,
                      height: MediaQuery.of(context).size.width / 2.45,
                      decoration: BoxDecoration(
                        color: CustomColors.primary,
                        borderRadius: BorderRadius.circular(20),
                        gradient: const LinearGradient(
                          begin: Alignment.topRight,
                          end: Alignment.bottomLeft,
                          colors: [
                            Color(0xffe17055),
                            Color(0xfffab1a0),
                          ],
                        ),
                      ),
                      child: Neumorphic(
                        style: NeumorphicStyle(
                          shape: NeumorphicShape.convex,
                          depth: 20,
                          surfaceIntensity: 1,
                          boxShape: NeumorphicBoxShape.roundRect(
                            BorderRadius.circular(12),
                          ),
                          lightSource: LightSource.topLeft,
                          color: const Color(0xffe17055),
                        ),
                        child: Center(
                          child: Text(
                            'Get',
                            style: GoogleFonts.poppins(
                              color: Colors.white,
                              fontSize: 35,
                              fontWeight: FontWeight.w400,
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ],
              ),
              const SizedBox(
                height: 30,
              ),
              Text(
                'Stats',
                style: TextStyle(
                  color: CustomColors.textColor,
                  fontFamily: "Recoleta",
                  fontSize: 50,
                  fontWeight: FontWeight.bold,
                ),
              ),
              Row(
                children: [
                  AutoSizeText(
                    'Rating: ',
                    maxLines: 1,
                    style: statTextStyles,
                  ),
                  AutoSizeText(
                    rating.toString() + '/5',
                    maxLines: 1,
                    style: goldStatTextStyles,
                  ),
                ],
              ),
              const SizedBox(
                height: 5,
              ),
              AutoSizeText(
                'Donations Completed: ' + donationsCompleted.toString(),
                maxLines: 1,
                style: statTextStyles,
              ),
              const SizedBox(
                height: 5,
              ),
              AutoSizeText(
                'People Helped: ' + peopleHelped.toString(),
                maxLines: 1,
                style: statTextStyles,
              ),
              const SizedBox(
                height: 5,
              ),
              AutoSizeText(
                'Food Saved: ' + foodSaved.toString() + ' Pounds',
                maxLines: 1,
                style: statTextStyles,
              ),
              const SizedBox(
                height: 5,
              ),
              AutoSizeText(
                'Hours Volunteered: ' + hoursVolunteered.toString() + ' Hours',
                maxLines: 1,
                style: statTextStyles,
              ),
            ],
          ),
        ),
      ),
      SafeArea(
        child: Padding(
          padding: const EdgeInsets.only(
            left: 30,
            right: 30,
          ),
          child: ListView(
            shrinkWrap: false,
            physics: const BouncingScrollPhysics(),
            children: [
              const SizedBox(
                height: 30,
              ),
              AutoSizeText(
                'Your Donations',
                maxLines: 2,
                style: TextStyle(
                  color: CustomColors.textColor,
                  fontFamily: "RecoletaB",
                  fontSize: 60,
                  fontWeight: FontWeight.w900,
                ),
              ),
              const SizedBox(
                height: 10,
              ),
              Text(
                'In Progress',
                style: GoogleFonts.poppins(
                  color: CustomColors.textColor,
                  fontSize: 20,
                  fontWeight: FontWeight.w600,
                ),
              ),
              const SizedBox(
                height: 3,
              ),
              Text(
                'Tap on a food item to view its actions.',
                style: GoogleFonts.poppins(
                  color: CustomColors.textColor,
                  fontSize: 15,
                  fontWeight: FontWeight.w400,
                ),
              ),
              const SizedBox(
                height: 15,
              ),
              StreamBuilder<QuerySnapshot>(
                stream: inProgressDonationsStream,
                builder: (BuildContext context,
                    AsyncSnapshot<QuerySnapshot> snapshots) {
                  if (snapshots.connectionState == ConnectionState.active &&
                      snapshots.hasData) {
                    return ListView(
                      shrinkWrap: true,
                      physics: const BouncingScrollPhysics(),
                      children: snapshots.data!.size == 0
                          ? [
                              Container(
                                height: 40,
                              )
                            ]
                          : snapshots.data!.docs.map(
                              (DocumentSnapshot document) {
                                Map<String, dynamic> data =
                                    document.data()! as Map<String, dynamic>;
                                return Padding(
                                  padding: const EdgeInsets.only(bottom: 20),
                                  child: GestureDetector(
                                    onTap: () async {
                                      final availableMaps =
                                          await MapLauncher.installedMaps;
                                      showMaterialModalBottomSheet(
                                        bounce: true,
                                        backgroundColor: CustomColors.secondary,
                                        context: context,
                                        builder: (context) =>
                                            SingleChildScrollView(
                                          controller:
                                              ModalScrollController.of(context),
                                          child: Padding(
                                            padding: const EdgeInsets.only(
                                                top: 40, left: 30, right: 50),
                                            child: Column(
                                              crossAxisAlignment:
                                                  CrossAxisAlignment.start,
                                              mainAxisAlignment:
                                                  MainAxisAlignment.start,
                                              children: [
                                                Text(
                                                  'In Progress',
                                                  style: GoogleFonts.poppins(
                                                    color:
                                                        CustomColors.textColor,
                                                    fontSize: 40,
                                                    fontWeight: FontWeight.w700,
                                                  ),
                                                ),
                                                const SizedBox(
                                                  height: 5,
                                                ),
                                                GestureDetector(
                                                  child: Text(
                                                    "Message donee",
                                                    maxLines: 1,
                                                    style: GoogleFonts.poppins(
                                                      color: CustomColors
                                                          .textColor,
                                                      fontSize: 24,
                                                      fontWeight:
                                                          FontWeight.w500,
                                                    ),
                                                  ),
                                                  onTap: () {
                                                    Navigator.of(context).push(
                                                      MaterialPageRoute(
                                                        builder: (context) =>
                                                            MessageList(
                                                          firstName: data[
                                                              "dFirstName"],
                                                          foodCategory: data[
                                                              "foodCategory"],
                                                          imagePath:
                                                              data["imagePath"],
                                                          lastName:
                                                              data["dLastName"],
                                                          downloadUrl: data[
                                                              "downloadUrl"],
                                                          dUid: data["dUid"],
                                                          uid: data['uid'],
                                                          docId: document.id,
                                                        ),
                                                      ),
                                                    );
                                                  },
                                                ),
                                                const SizedBox(
                                                  height: 5,
                                                ),
                                                data["deliveryOption"] ==
                                                        "Deliver"
                                                    ? GestureDetector(
                                                        onTap: () {
                                                          showModalBottomSheet(
                                                            context: context,
                                                            builder:
                                                                (BuildContext
                                                                    context) {
                                                              return SafeArea(
                                                                child:
                                                                    SingleChildScrollView(
                                                                  child: Column(
                                                                    children: [
                                                                      Wrap(
                                                                        children: <
                                                                            Widget>[
                                                                          for (var map
                                                                              in availableMaps)
                                                                            GestureDetector(
                                                                              onTap: () {},
                                                                              child: ListTile(
                                                                                onTap: () => map.showDirections(
                                                                                  destination: Coords(
                                                                                    data["dLatitude"],
                                                                                    data["dLongitude"],
                                                                                  ),
                                                                                ),
                                                                                title: Text(map.mapName),
                                                                                leading: SvgPicture.asset(
                                                                                  map.icon,
                                                                                  height: 30.0,
                                                                                  width: 30.0,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                        ],
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              );
                                                            },
                                                          );
                                                        },
                                                        child: AutoSizeText(
                                                          "Directions to donee",
                                                          maxLines: 1,
                                                          style: GoogleFonts
                                                              .poppins(
                                                            fontSize: 24,
                                                            fontWeight:
                                                                FontWeight.w500,
                                                          ),
                                                        ),
                                                      )
                                                    : Container(),
                                                data["deliveryOption"] == "Stay"
                                                    ? GestureDetector(
                                                        child: Text(
                                                          "Follow Donee",
                                                          maxLines: 1,
                                                          style: GoogleFonts
                                                              .poppins(
                                                            color: CustomColors
                                                                .textColor,
                                                            fontSize: 24,
                                                            fontWeight:
                                                                FontWeight.w500,
                                                          ),
                                                        ),
                                                        onTap: () {
                                                          Navigator.of(context)
                                                              .push(
                                                            MaterialPageRoute(
                                                              builder:
                                                                  (context) =>
                                                                      MapsPage(
                                                                firstName: data[
                                                                    "dFirstName"],
                                                                lastName: data[
                                                                    "dLastName"],
                                                                latitute: latitude!
                                                                    .toDouble(),
                                                                longitude: latitude!
                                                                    .toDouble(),
                                                                foodCategory: data[
                                                                    "foodCategory"],
                                                                dUid: data[
                                                                    "dUid"],
                                                              ),
                                                            ),
                                                          );
                                                        },
                                                      )
                                                    : Container(),
                                                const SizedBox(
                                                  height: 20,
                                                ),
                                              ],
                                            ),
                                          ),
                                        ),
                                      );
                                    },
                                    child: Container(
                                      decoration: BoxDecoration(
                                        borderRadius: BorderRadius.circular(40),
                                        color: CustomColors.secondary,
                                        border: Border.all(
                                          width: 1,
                                          color: CustomColors.textColor,
                                        ),
                                      ),
                                      child: Row(
                                        children: [
                                          Padding(
                                            padding: const EdgeInsets.only(
                                              right: 15,
                                            ),
                                            child: ClipRRect(
                                              borderRadius:
                                                  BorderRadius.circular(40.0),
                                              child: Image.network(
                                                data['downloadUrl'],
                                                fit: BoxFit.cover,
                                                width: 150,
                                                height: 150,
                                              ),
                                            ),
                                          ),
                                          Column(
                                            mainAxisAlignment:
                                                MainAxisAlignment.center,
                                            crossAxisAlignment:
                                                CrossAxisAlignment.start,
                                            children: [
                                              ConstrainedBox(
                                                constraints:
                                                    const BoxConstraints(
                                                  maxWidth: 140,
                                                ),
                                                child: AutoSizeText(
                                                  data['foodCategory']
                                                      .toString(),
                                                  maxLines: 1,
                                                  style: GoogleFonts.poppins(
                                                    color:
                                                        CustomColors.textColor,
                                                    fontSize: 25,
                                                    fontWeight: FontWeight.w700,
                                                  ),
                                                ),
                                              ),
                                              const SizedBox(
                                                height: 5,
                                              ),
                                              ConstrainedBox(
                                                constraints:
                                                    const BoxConstraints(
                                                  maxHeight: 70.0,
                                                  maxWidth: 140,
                                                ),
                                                child: AutoSizeText(
                                                  data['allergens'],
                                                  minFontSize: 10,
                                                  maxFontSize: 25,
                                                  style: GoogleFonts.poppins(
                                                    color:
                                                        CustomColors.textColor,
                                                    fontWeight: FontWeight.w500,
                                                  ),
                                                ),
                                              ),
                                              const SizedBox(
                                                height: 5,
                                              ),
                                              AutoSizeText(
                                                data['ageNum'].toString() +
                                                    ' ' +
                                                    data['ageUnit'].toString(),
                                                maxLines: 1,
                                                style: GoogleFonts.poppins(
                                                  color: CustomColors.textColor,
                                                  fontSize: 15,
                                                  fontWeight: FontWeight.w400,
                                                ),
                                              ),
                                            ],
                                          ),
                                        ],
                                      ),
                                    ),
                                  ),
                                );
                              },
                            ).toList(),
                    );
                  }
                  return Center(
                    child: CircularProgressIndicator(
                      color: CustomColors.textColor,
                    ),
                  );
                },
              ),
              Text(
                'Awaiting Approval',
                style: GoogleFonts.poppins(
                  color: CustomColors.textColor,
                  fontSize: 20,
                  fontWeight: FontWeight.w600,
                ),
              ),
              const SizedBox(
                height: 3,
              ),
              Text(
                'Tap on a food item to view its actions.',
                style: GoogleFonts.poppins(
                  color: CustomColors.textColor,
                  fontSize: 15,
                  fontWeight: FontWeight.w400,
                ),
              ),
              const SizedBox(
                height: 15,
              ),
              StreamBuilder<QuerySnapshot>(
                stream: awaitingApprovalDonationsStream,
                builder: (BuildContext context,
                    AsyncSnapshot<QuerySnapshot> snapshots) {
                  if (snapshots.connectionState == ConnectionState.active &&
                      snapshots.hasData) {
                    return ListView(
                      shrinkWrap: true,
                      physics: const BouncingScrollPhysics(),
                      children: snapshots.data!.size == 0
                          ? [
                              Container(
                                height: 40,
                              )
                            ]
                          : snapshots.data!.docs.map(
                              (DocumentSnapshot document) {
                                Map<String, dynamic> data =
                                    document.data()! as Map<String, dynamic>;
                                return Padding(
                                  padding: const EdgeInsets.only(bottom: 20),
                                  child: GestureDetector(
                                    onTap: () async {
                                      double distanceInMeters =
                                          geolocator.Geolocator.distanceBetween(
                                        data["dLatitude"],
                                        data["dLongitude"],
                                        latitude!.toDouble(),
                                        longitude!.toDouble(),
                                      );

                                      showMaterialModalBottomSheet(
                                        bounce: true,
                                        backgroundColor: CustomColors.secondary,
                                        context: context,
                                        builder: (context) =>
                                            SingleChildScrollView(
                                          controller:
                                              ModalScrollController.of(context),
                                          child: Padding(
                                            padding: const EdgeInsets.only(
                                                top: 40, left: 30, right: 50),
                                            child: Column(
                                              crossAxisAlignment:
                                                  CrossAxisAlignment.start,
                                              mainAxisAlignment:
                                                  MainAxisAlignment.start,
                                              children: [
                                                Text(
                                                  'Incoming',
                                                  style: TextStyle(
                                                    fontFamily: "Recoleta",
                                                    color:
                                                        CustomColors.textColor,
                                                    fontSize: 40,
                                                    fontWeight: FontWeight.w700,
                                                  ),
                                                ),
                                                const SizedBox(
                                                  height: 5,
                                                ),
                                                AutoSizeText(
                                                  data["dFirstName"] +
                                                      " " +
                                                      data["dLastName"],
                                                  maxLines: 1,
                                                  style: GoogleFonts.poppins(
                                                    color:
                                                        CustomColors.textColor,
                                                    fontSize: 24,
                                                    fontWeight: FontWeight.w600,
                                                  ),
                                                ),
                                                Text(
                                                  'Rating: ' +
                                                      data["dRating"]
                                                          .toString() +
                                                      '.0/5.0',
                                                  style: GoogleFonts.poppins(
                                                    color:
                                                        CustomColors.textColor,
                                                    fontSize: 18,
                                                    fontWeight: FontWeight.w400,
                                                  ),
                                                ),
                                                const SizedBox(
                                                  height: 20,
                                                ),
                                                AutoSizeText(
                                                  "" +
                                                      (distanceInMeters / 1609)
                                                          .toStringAsFixed(2) +
                                                      " miles away",
                                                  maxLines: 1,
                                                  style: GoogleFonts.poppins(
                                                    color:
                                                        CustomColors.textColor,
                                                    fontSize: 20,
                                                    fontWeight: FontWeight.w300,
                                                  ),
                                                ),
                                                const SizedBox(
                                                  height: 20,
                                                ),
                                                Padding(
                                                  padding:
                                                      const EdgeInsets.only(
                                                          bottom: 50),
                                                  child: ElevatedButton(
                                                    style: ElevatedButton
                                                        .styleFrom(
                                                      primary:
                                                          CustomColors.primary,
                                                      onPrimary: Colors.white,
                                                      elevation: 0,
                                                      shape:
                                                          RoundedRectangleBorder(
                                                        borderRadius:
                                                            BorderRadius
                                                                .circular(
                                                                    140.0),
                                                      ),
                                                      minimumSize: const Size(
                                                          double.infinity, 50),
                                                    ),
                                                    onPressed: () {
                                                      FirebaseFirestore.instance
                                                          .collection(
                                                              'donations')
                                                          .doc(document.id)
                                                          .update(
                                                        {
                                                          'status':
                                                              'InProgress',
                                                        },
                                                      );
                                                    },
                                                    child: Text(
                                                      'Confirm',
                                                      style:
                                                          GoogleFonts.poppins(
                                                        color: Colors.white,
                                                        fontSize: 18,
                                                      ),
                                                    ),
                                                  ),
                                                )
                                              ],
                                            ),
                                          ),
                                        ),
                                      );
                                    },
                                    child: Container(
                                      decoration: BoxDecoration(
                                        borderRadius: BorderRadius.circular(40),
                                        color: CustomColors.secondary,
                                        border: Border.all(
                                          width: 1,
                                          color: CustomColors.textColor,
                                        ),
                                      ),
                                      child: Row(
                                        children: [
                                          Padding(
                                            padding: const EdgeInsets.only(
                                              right: 15,
                                            ),
                                            child: ClipRRect(
                                              borderRadius:
                                                  BorderRadius.circular(40.0),
                                              child: Image.network(
                                                data['downloadUrl'],
                                                fit: BoxFit.cover,
                                                width: 150,
                                                height: 150,
                                              ),
                                            ),
                                          ),
                                          Column(
                                            mainAxisAlignment:
                                                MainAxisAlignment.center,
                                            crossAxisAlignment:
                                                CrossAxisAlignment.start,
                                            children: [
                                              ConstrainedBox(
                                                constraints:
                                                    const BoxConstraints(
                                                  maxWidth: 140,
                                                ),
                                                child: AutoSizeText(
                                                  data['foodCategory']
                                                      .toString(),
                                                  maxLines: 1,
                                                  style: GoogleFonts.poppins(
                                                    color:
                                                        CustomColors.textColor,
                                                    fontSize: 25,
                                                    fontWeight: FontWeight.w700,
                                                  ),
                                                ),
                                              ),
                                              const SizedBox(
                                                height: 5,
                                              ),
                                              ConstrainedBox(
                                                constraints:
                                                    const BoxConstraints(
                                                  maxHeight: 70.0,
                                                  maxWidth: 140,
                                                ),
                                                child: AutoSizeText(
                                                  data['allergens'],
                                                  minFontSize: 10,
                                                  maxFontSize: 25,
                                                  style: GoogleFonts.poppins(
                                                    color:
                                                        CustomColors.textColor,
                                                    fontWeight: FontWeight.w500,
                                                  ),
                                                ),
                                              ),
                                              const SizedBox(
                                                height: 5,
                                              ),
                                              AutoSizeText(
                                                data['ageNum'].toString() +
                                                    ' ' +
                                                    data['ageUnit'].toString(),
                                                maxLines: 1,
                                                style: GoogleFonts.poppins(
                                                  color: CustomColors.textColor,
                                                  fontSize: 15,
                                                  fontWeight: FontWeight.w400,
                                                ),
                                              ),
                                            ],
                                          ),
                                        ],
                                      ),
                                    ),
                                  ),
                                );
                              },
                            ).toList(),
                    );
                  }
                  return Center(
                    child: CircularProgressIndicator(
                      color: CustomColors.textColor,
                    ),
                  );
                },
              ),
              Text(
                'Online',
                style: GoogleFonts.poppins(
                  color: CustomColors.textColor,
                  fontSize: 20,
                  fontWeight: FontWeight.w600,
                ),
              ),
              const SizedBox(
                height: 3,
              ),
              Text(
                'Tap on a food item to view its actions.',
                style: GoogleFonts.poppins(
                  color: CustomColors.textColor,
                  fontSize: 15,
                  fontWeight: FontWeight.w400,
                ),
              ),
              const SizedBox(
                height: 15,
              ),
              StreamBuilder<QuerySnapshot>(
                stream: onlineDonationsStream,
                builder: (BuildContext context,
                    AsyncSnapshot<QuerySnapshot> snapshots) {
                  if (snapshots.connectionState == ConnectionState.active) {
                    return ListView(
                      shrinkWrap: true,
                      physics: const BouncingScrollPhysics(),
                      children: snapshots.data!.size == 0
                          ? [
                              Container(
                                height: 40,
                              )
                            ]
                          : snapshots.data!.docs.map(
                              (DocumentSnapshot document) {
                                Map<String, dynamic> data =
                                    document.data()! as Map<String, dynamic>;
                                return Padding(
                                  padding: const EdgeInsets.only(bottom: 20),
                                  child: Container(
                                    decoration: BoxDecoration(
                                      borderRadius: BorderRadius.circular(40),
                                      color: CustomColors.secondary,
                                      border: Border.all(
                                        width: 1,
                                        color: CustomColors.textColor,
                                      ),
                                    ),
                                    child: Row(
                                      children: [
                                        Padding(
                                          padding: const EdgeInsets.only(
                                            right: 15,
                                          ),
                                          child: ClipRRect(
                                            borderRadius:
                                                BorderRadius.circular(40.0),
                                            child: Image.network(
                                              data['downloadUrl'],
                                              fit: BoxFit.cover,
                                              width: 150,
                                              height: 150,
                                            ),
                                          ),
                                        ),
                                        Column(
                                          mainAxisAlignment:
                                              MainAxisAlignment.center,
                                          crossAxisAlignment:
                                              CrossAxisAlignment.start,
                                          children: [
                                            ConstrainedBox(
                                              constraints: const BoxConstraints(
                                                maxWidth: 140,
                                              ),
                                              child: AutoSizeText(
                                                data['foodCategory'].toString(),
                                                maxLines: 1,
                                                style: GoogleFonts.poppins(
                                                  color: CustomColors.textColor,
                                                  fontSize: 25,
                                                  fontWeight: FontWeight.w700,
                                                ),
                                              ),
                                            ),
                                            const SizedBox(
                                              height: 5,
                                            ),
                                            ConstrainedBox(
                                              constraints: const BoxConstraints(
                                                maxHeight: 70.0,
                                                maxWidth: 140,
                                              ),
                                              child: AutoSizeText(
                                                data['allergens'],
                                                minFontSize: 10,
                                                maxFontSize: 25,
                                                style: GoogleFonts.poppins(
                                                  color: CustomColors.textColor,
                                                  fontWeight: FontWeight.w500,
                                                ),
                                              ),
                                            ),
                                            const SizedBox(
                                              height: 5,
                                            ),
                                            AutoSizeText(
                                              data['ageNum'].toString() +
                                                  ' ' +
                                                  data['ageUnit'].toString(),
                                              maxLines: 1,
                                              style: GoogleFonts.poppins(
                                                color: CustomColors.textColor,
                                                fontSize: 15,
                                                fontWeight: FontWeight.w400,
                                              ),
                                            ),
                                          ],
                                        ),
                                      ],
                                    ),
                                  ),
                                );
                              },
                            ).toList(),
                    );
                  }
                  return Center(
                    child: CircularProgressIndicator(
                      color: CustomColors.textColor,
                    ),
                  );
                },
              ),
              Text(
                'Completed',
                style: GoogleFonts.poppins(
                  color: CustomColors.textColor,
                  fontSize: 20,
                  fontWeight: FontWeight.w600,
                ),
              ),
              const SizedBox(
                height: 3,
              ),
              Text(
                'Tap on a food item to view its actions.',
                style: GoogleFonts.poppins(
                  color: CustomColors.textColor,
                  fontSize: 15,
                  fontWeight: FontWeight.w400,
                ),
              ),
              const SizedBox(
                height: 15,
              ),
              StreamBuilder<QuerySnapshot>(
                stream: completedDonationsStream,
                builder: (BuildContext context,
                    AsyncSnapshot<QuerySnapshot> snapshots) {
                  if (snapshots.connectionState == ConnectionState.active) {
                    return ListView(
                      shrinkWrap: true,
                      physics: const BouncingScrollPhysics(),
                      children: snapshots.data!.size == 0
                          ? [
                              Container(
                                height: 40,
                              )
                            ]
                          : snapshots.data!.docs.map(
                              (DocumentSnapshot document) {
                                Map<String, dynamic> data =
                                    document.data()! as Map<String, dynamic>;
                                return Padding(
                                  padding: const EdgeInsets.only(bottom: 20),
                                  child: Container(
                                    decoration: BoxDecoration(
                                      borderRadius: BorderRadius.circular(40),
                                      color: CustomColors.secondary,
                                      border: Border.all(
                                        width: 1,
                                        color: CustomColors.textColor,
                                      ),
                                    ),
                                    child: Row(
                                      children: [
                                        Padding(
                                          padding: const EdgeInsets.only(
                                            right: 15,
                                          ),
                                          child: ClipRRect(
                                            borderRadius:
                                                BorderRadius.circular(40.0),
                                            child: Image.network(
                                              data['downloadUrl'],
                                              fit: BoxFit.cover,
                                              width: 150,
                                              height: 150,
                                            ),
                                          ),
                                        ),
                                        Column(
                                          mainAxisAlignment:
                                              MainAxisAlignment.center,
                                          crossAxisAlignment:
                                              CrossAxisAlignment.start,
                                          children: [
                                            ConstrainedBox(
                                              constraints: const BoxConstraints(
                                                maxWidth: 140,
                                              ),
                                              child: AutoSizeText(
                                                data['foodCategory'].toString(),
                                                maxLines: 1,
                                                style: GoogleFonts.poppins(
                                                  color: CustomColors.textColor,
                                                  fontSize: 25,
                                                  fontWeight: FontWeight.w700,
                                                ),
                                              ),
                                            ),
                                            const SizedBox(
                                              height: 5,
                                            ),
                                            ConstrainedBox(
                                              constraints: const BoxConstraints(
                                                maxHeight: 70.0,
                                                maxWidth: 140,
                                              ),
                                              child: AutoSizeText(
                                                data['allergens'],
                                                minFontSize: 10,
                                                maxFontSize: 25,
                                                style: GoogleFonts.poppins(
                                                  color: CustomColors.textColor,
                                                  fontWeight: FontWeight.w500,
                                                ),
                                              ),
                                            ),
                                            const SizedBox(
                                              height: 5,
                                            ),
                                            AutoSizeText(
                                              data['ageNum'].toString() +
                                                  ' ' +
                                                  data['ageUnit'].toString(),
                                              maxLines: 1,
                                              style: GoogleFonts.poppins(
                                                color: CustomColors.textColor,
                                                fontSize: 15,
                                                fontWeight: FontWeight.w400,
                                              ),
                                            ),
                                          ],
                                        ),
                                      ],
                                    ),
                                  ),
                                );
                              },
                            ).toList(),
                    );
                  }
                  return Center(
                    child: CircularProgressIndicator(
                      color: CustomColors.textColor,
                    ),
                  );
                },
              ),
            ],
          ),
        ),
      ),
      SafeArea(
        child: Padding(
          padding: const EdgeInsets.only(
            left: 30,
            right: 30,
          ),
          child: ListView(
            shrinkWrap: false,
            physics: const BouncingScrollPhysics(),
            children: [
              const SizedBox(
                height: 30,
              ),
              AutoSizeText(
                'Your Receipts',
                maxLines: 2,
                style: TextStyle(
                  color: CustomColors.textColor,
                  fontFamily: "RecoletaB",
                  fontSize: 60,
                  fontWeight: FontWeight.w900,
                ),
              ),
              const SizedBox(
                height: 10,
              ),
              Text(
                'In Progress',
                style: GoogleFonts.poppins(
                  color: CustomColors.textColor,
                  fontSize: 20,
                  fontWeight: FontWeight.w600,
                ),
              ),
              const SizedBox(
                height: 3,
              ),
              Text(
                'Tap on a food item to view its actions.',
                style: GoogleFonts.poppins(
                  color: CustomColors.textColor,
                  fontSize: 15,
                  fontWeight: FontWeight.w400,
                ),
              ),
              const SizedBox(
                height: 15,
              ),
              StreamBuilder<QuerySnapshot>(
                stream: inProgressReceiptsStream,
                builder: (BuildContext context,
                    AsyncSnapshot<QuerySnapshot> snapshots) {
                  if (snapshots.connectionState == ConnectionState.active &&
                      snapshots.hasData) {
                    return ListView(
                      shrinkWrap: true,
                      physics: const BouncingScrollPhysics(),
                      children: snapshots.data!.size == 0
                          ? [
                              Container(
                                height: 40,
                              )
                            ]
                          : snapshots.data!.docs.map(
                              (DocumentSnapshot document) {
                                Map<String, dynamic> data =
                                    document.data()! as Map<String, dynamic>;
                                return Padding(
                                  padding: const EdgeInsets.only(bottom: 20),
                                  child: GestureDetector(
                                    onTap: () async {
                                      final availableMaps =
                                          await MapLauncher.installedMaps;
                                      showMaterialModalBottomSheet(
                                        bounce: true,
                                        backgroundColor: CustomColors.secondary,
                                        context: context,
                                        builder: (context) =>
                                            SingleChildScrollView(
                                          controller:
                                              ModalScrollController.of(context),
                                          child: Padding(
                                            padding: const EdgeInsets.only(
                                                top: 40, left: 30, right: 50),
                                            child: Column(
                                              crossAxisAlignment:
                                                  CrossAxisAlignment.start,
                                              mainAxisAlignment:
                                                  MainAxisAlignment.start,
                                              children: [
                                                Text(
                                                  'In Progress',
                                                  style: GoogleFonts.poppins(
                                                    color:
                                                        CustomColors.textColor,
                                                    fontSize: 40,
                                                    fontWeight: FontWeight.w700,
                                                  ),
                                                ),
                                                const SizedBox(
                                                  height: 5,
                                                ),
                                                GestureDetector(
                                                  child: AutoSizeText(
                                                    "Message Donor",
                                                    maxLines: 1,
                                                    style: GoogleFonts.poppins(
                                                      color: CustomColors
                                                          .textColor,
                                                      fontSize: 24,
                                                      fontWeight:
                                                          FontWeight.w500,
                                                    ),
                                                  ),
                                                  onTap: () {
                                                    Navigator.of(context).push(
                                                      MaterialPageRoute(
                                                        builder: (context) =>
                                                            MessageList(
                                                          firstName:
                                                              data["firstName"],
                                                          foodCategory: data[
                                                              "foodCategory"],
                                                          imagePath:
                                                              data["imagePath"],
                                                          lastName:
                                                              data["lastName"],
                                                          downloadUrl: data[
                                                              "downloadUrl"],
                                                          dUid: data["uid"],
                                                          uid: data['uid'],
                                                          docId: document.id,
                                                        ),
                                                      ),
                                                    );
                                                  },
                                                ),
                                                const SizedBox(
                                                  height: 5,
                                                ),
                                                data["deliveryOption"] == "Stay"
                                                    ? GestureDetector(
                                                        onTap: () {
                                                          showModalBottomSheet(
                                                            context: context,
                                                            builder:
                                                                (BuildContext
                                                                    context) {
                                                              return SafeArea(
                                                                child:
                                                                    SingleChildScrollView(
                                                                  child: Column(
                                                                    children: [
                                                                      Wrap(
                                                                        children: <
                                                                            Widget>[
                                                                          for (var map
                                                                              in availableMaps)
                                                                            ListTile(
                                                                              onTap: () => map.showDirections(
                                                                                destination: Coords(
                                                                                  data["dLatitude"],
                                                                                  data["dLongitude"],
                                                                                ),
                                                                              ),
                                                                              title: Text(map.mapName),
                                                                              leading: SvgPicture.asset(
                                                                                map.icon,
                                                                                height: 30.0,
                                                                                width: 30.0,
                                                                              ),
                                                                            ),
                                                                        ],
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              );
                                                            },
                                                          );
                                                        },
                                                        child: AutoSizeText(
                                                          "Directions to donor",
                                                          maxLines: 1,
                                                          style: GoogleFonts
                                                              .poppins(
                                                            fontSize: 24,
                                                            fontWeight:
                                                                FontWeight.w500,
                                                          ),
                                                        ),
                                                      )
                                                    : Container(),
                                                data["deliveryOption"] ==
                                                        "Deliver"
                                                    ? GestureDetector(
                                                        child: AutoSizeText(
                                                          "Follow Donor",
                                                          maxLines: 1,
                                                          style: GoogleFonts
                                                              .poppins(
                                                            color: CustomColors
                                                                .textColor,
                                                            fontSize: 24,
                                                            fontWeight:
                                                                FontWeight.w500,
                                                          ),
                                                        ),
                                                        onTap: () async {
                                                          Navigator.of(context)
                                                              .push(
                                                            MaterialPageRoute(
                                                              builder:
                                                                  (context) =>
                                                                      MessageList(
                                                                firstName: data[
                                                                    "firstName"],
                                                                foodCategory: data[
                                                                    "foodCategory"],
                                                                imagePath: data[
                                                                    "imagePath"],
                                                                lastName: data[
                                                                    "lastName"],
                                                                downloadUrl: data[
                                                                    "downloadUrl"],
                                                                dUid:
                                                                    data["uid"],
                                                                uid:
                                                                    data['uid'],
                                                                docId:
                                                                    document.id,
                                                              ),
                                                            ),
                                                          );
                                                        },
                                                      )
                                                    : Container(),
                                                GestureDetector(
                                                  child: AutoSizeText(
                                                    "Start tracking",
                                                    maxLines: 1,
                                                    style: GoogleFonts.poppins(
                                                      color: CustomColors
                                                          .textColor,
                                                      fontSize: 24,
                                                      fontWeight:
                                                          FontWeight.w500,
                                                    ),
                                                  ),
                                                  onTap: () {
                                                    // _locationSubscription =
                                                    //     _locationTracker
                                                    //         .onLocationChanged
                                                    //         .listen(
                                                    //   (newLocalData) {
                                                    //     if (_controller !=
                                                    //         null) {
                                                    //       _controller!
                                                    //           .animateCamera(
                                                    //         CameraUpdate
                                                    //             .newCameraPosition(
                                                    //           CameraPosition(
                                                    //               bearing:
                                                    //                   192.8334901395799,
                                                    //               target: LatLng(
                                                    //                   newLocalData
                                                    //                       .latitude!
                                                    //                       .toDouble(),
                                                    //                   newLocalData
                                                    //                       .longitude!
                                                    //                       .toDouble()),
                                                    //               tilt: 0,
                                                    //               zoom: 18.00),
                                                    //         ),
                                                    //       );
                                                    //       updateMarkerAndCircle(
                                                    //           newLocalData,
                                                    //           imageData);
                                                    //     }
                                                    //   },
                                                    // );
                                                  },
                                                ),
                                                const SizedBox(
                                                  height: 20,
                                                ),
                                              ],
                                            ),
                                          ),
                                        ),
                                      );
                                    },
                                    child: Container(
                                      decoration: BoxDecoration(
                                        borderRadius: BorderRadius.circular(40),
                                        color: CustomColors.secondary,
                                        border: Border.all(
                                          width: 1,
                                          color: CustomColors.textColor,
                                        ),
                                      ),
                                      child: Row(
                                        children: [
                                          Padding(
                                            padding: const EdgeInsets.only(
                                              right: 15,
                                            ),
                                            child: ClipRRect(
                                              borderRadius:
                                                  BorderRadius.circular(40.0),
                                              child: Image.network(
                                                data['downloadUrl'],
                                                fit: BoxFit.cover,
                                                width: 150,
                                                height: 150,
                                              ),
                                            ),
                                          ),
                                          Column(
                                            mainAxisAlignment:
                                                MainAxisAlignment.center,
                                            crossAxisAlignment:
                                                CrossAxisAlignment.start,
                                            children: [
                                              ConstrainedBox(
                                                constraints:
                                                    const BoxConstraints(
                                                  maxWidth: 140,
                                                ),
                                                child: AutoSizeText(
                                                  data['foodCategory']
                                                      .toString(),
                                                  maxLines: 1,
                                                  style: GoogleFonts.poppins(
                                                    color:
                                                        CustomColors.textColor,
                                                    fontSize: 25,
                                                    fontWeight: FontWeight.w700,
                                                  ),
                                                ),
                                              ),
                                              const SizedBox(
                                                height: 5,
                                              ),
                                              ConstrainedBox(
                                                constraints:
                                                    const BoxConstraints(
                                                  maxHeight: 70.0,
                                                  maxWidth: 140,
                                                ),
                                                child: AutoSizeText(
                                                  data['allergens'],
                                                  minFontSize: 10,
                                                  maxFontSize: 25,
                                                  style: GoogleFonts.poppins(
                                                    color:
                                                        CustomColors.textColor,
                                                    fontWeight: FontWeight.w500,
                                                  ),
                                                ),
                                              ),
                                              const SizedBox(
                                                height: 5,
                                              ),
                                              AutoSizeText(
                                                data['ageNum'].toString() +
                                                    ' ' +
                                                    data['ageUnit'].toString(),
                                                maxLines: 1,
                                                style: GoogleFonts.poppins(
                                                  color: CustomColors.textColor,
                                                  fontSize: 15,
                                                  fontWeight: FontWeight.w400,
                                                ),
                                              ),
                                            ],
                                          ),
                                        ],
                                      ),
                                    ),
                                  ),
                                );
                              },
                            ).toList(),
                    );
                  }
                  return Center(
                    child: CircularProgressIndicator(
                      color: CustomColors.textColor,
                    ),
                  );
                },
              ),
              Text(
                'Awaiting Approval',
                style: GoogleFonts.poppins(
                  color: CustomColors.textColor,
                  fontSize: 20,
                  fontWeight: FontWeight.w600,
                ),
              ),
              const SizedBox(
                height: 3,
              ),
              Text(
                'Tap on a food item to view its actions.',
                style: GoogleFonts.poppins(
                  color: CustomColors.textColor,
                  fontSize: 15,
                  fontWeight: FontWeight.w400,
                ),
              ),
              const SizedBox(
                height: 15,
              ),
              StreamBuilder<QuerySnapshot>(
                stream: awaitingApprovalReceiptsStream,
                builder: (BuildContext context,
                    AsyncSnapshot<QuerySnapshot> snapshots) {
                  if (snapshots.connectionState == ConnectionState.active &&
                      snapshots.hasData) {
                    return ListView(
                      shrinkWrap: true,
                      physics: const BouncingScrollPhysics(),
                      children: snapshots.data!.size == 0
                          ? [
                              Container(
                                height: 40,
                              )
                            ]
                          : snapshots.data!.docs.map(
                              (DocumentSnapshot document) {
                                Map<String, dynamic> data =
                                    document.data()! as Map<String, dynamic>;
                                return Padding(
                                  padding: const EdgeInsets.only(bottom: 20),
                                  child: GestureDetector(
                                    onTap: () async {
                                      showMaterialModalBottomSheet(
                                        bounce: true,
                                        backgroundColor: CustomColors.secondary,
                                        context: context,
                                        builder: (context) =>
                                            SingleChildScrollView(
                                          controller:
                                              ModalScrollController.of(context),
                                          child: Padding(
                                            padding: const EdgeInsets.only(
                                                top: 40, left: 30, right: 50),
                                            child: Column(
                                              crossAxisAlignment:
                                                  CrossAxisAlignment.start,
                                              mainAxisAlignment:
                                                  MainAxisAlignment.start,
                                              children: [
                                                Text(
                                                  'Incoming',
                                                  style: GoogleFonts.poppins(
                                                    color:
                                                        CustomColors.textColor,
                                                    fontSize: 40,
                                                    fontWeight: FontWeight.w700,
                                                  ),
                                                ),
                                                const SizedBox(
                                                  height: 5,
                                                ),
                                                AutoSizeText(
                                                  "The donor for this food item has not yet accepted your request to claim this food item. Check again later.",
                                                  maxLines: 10,
                                                  style: GoogleFonts.poppins(
                                                    color:
                                                        CustomColors.textColor,
                                                    fontSize: 15,
                                                    fontWeight: FontWeight.w300,
                                                  ),
                                                ),
                                                const SizedBox(
                                                  height: 20,
                                                ),
                                              ],
                                            ),
                                          ),
                                        ),
                                      );
                                    },
                                    child: Container(
                                      decoration: BoxDecoration(
                                        borderRadius: BorderRadius.circular(40),
                                        color: CustomColors.secondary,
                                        border: Border.all(
                                          width: 1,
                                          color: CustomColors.textColor,
                                        ),
                                      ),
                                      child: Row(
                                        children: [
                                          Padding(
                                            padding: const EdgeInsets.only(
                                              right: 15,
                                            ),
                                            child: ClipRRect(
                                              borderRadius:
                                                  BorderRadius.circular(40.0),
                                              child: Image.network(
                                                data['downloadUrl'],
                                                fit: BoxFit.cover,
                                                width: 150,
                                                height: 150,
                                              ),
                                            ),
                                          ),
                                          Column(
                                            mainAxisAlignment:
                                                MainAxisAlignment.center,
                                            crossAxisAlignment:
                                                CrossAxisAlignment.start,
                                            children: [
                                              ConstrainedBox(
                                                constraints:
                                                    const BoxConstraints(
                                                  maxWidth: 140,
                                                ),
                                                child: AutoSizeText(
                                                  data['foodCategory']
                                                      .toString(),
                                                  maxLines: 1,
                                                  style: GoogleFonts.poppins(
                                                    color:
                                                        CustomColors.textColor,
                                                    fontSize: 25,
                                                    fontWeight: FontWeight.w700,
                                                  ),
                                                ),
                                              ),
                                              const SizedBox(
                                                height: 5,
                                              ),
                                              ConstrainedBox(
                                                constraints:
                                                    const BoxConstraints(
                                                  maxHeight: 70.0,
                                                  maxWidth: 140,
                                                ),
                                                child: AutoSizeText(
                                                  data['allergens'],
                                                  minFontSize: 10,
                                                  maxFontSize: 25,
                                                  style: GoogleFonts.poppins(
                                                    color:
                                                        CustomColors.textColor,
                                                    fontWeight: FontWeight.w500,
                                                  ),
                                                ),
                                              ),
                                              const SizedBox(
                                                height: 5,
                                              ),
                                              AutoSizeText(
                                                data['ageNum'].toString() +
                                                    ' ' +
                                                    data['ageUnit'].toString(),
                                                maxLines: 1,
                                                style: GoogleFonts.poppins(
                                                  color: CustomColors.textColor,
                                                  fontSize: 15,
                                                  fontWeight: FontWeight.w400,
                                                ),
                                              ),
                                            ],
                                          ),
                                        ],
                                      ),
                                    ),
                                  ),
                                );
                              },
                            ).toList(),
                    );
                  }
                  return Center(
                    child: CircularProgressIndicator(
                      color: CustomColors.textColor,
                    ),
                  );
                },
              ),
              Text(
                'Online',
                style: GoogleFonts.poppins(
                  color: CustomColors.textColor,
                  fontSize: 20,
                  fontWeight: FontWeight.w600,
                ),
              ),
              const SizedBox(
                height: 3,
              ),
              Text(
                'Tap on a food item to view its actions.',
                style: GoogleFonts.poppins(
                  color: CustomColors.textColor,
                  fontSize: 15,
                  fontWeight: FontWeight.w400,
                ),
              ),
              const SizedBox(
                height: 15,
              ),
              StreamBuilder<QuerySnapshot>(
                stream: onlineReceiptsStream,
                builder: (BuildContext context,
                    AsyncSnapshot<QuerySnapshot> snapshots) {
                  if (snapshots.connectionState == ConnectionState.active) {
                    return ListView(
                      shrinkWrap: true,
                      physics: const BouncingScrollPhysics(),
                      children: snapshots.data!.size == 0
                          ? [
                              Container(
                                height: 40,
                              )
                            ]
                          : snapshots.data!.docs.map(
                              (DocumentSnapshot document) {
                                Map<String, dynamic> data =
                                    document.data()! as Map<String, dynamic>;
                                return Padding(
                                  padding: const EdgeInsets.only(bottom: 20),
                                  child: Container(
                                    decoration: BoxDecoration(
                                      borderRadius: BorderRadius.circular(40),
                                      color: CustomColors.secondary,
                                      border: Border.all(
                                        width: 1,
                                        color: CustomColors.textColor,
                                      ),
                                    ),
                                    child: Row(
                                      children: [
                                        Padding(
                                          padding: const EdgeInsets.only(
                                            right: 15,
                                          ),
                                          child: ClipRRect(
                                            borderRadius:
                                                BorderRadius.circular(40.0),
                                            child: Image.network(
                                              data['downloadUrl'],
                                              fit: BoxFit.cover,
                                              width: 150,
                                              height: 150,
                                            ),
                                          ),
                                        ),
                                        Column(
                                          mainAxisAlignment:
                                              MainAxisAlignment.center,
                                          crossAxisAlignment:
                                              CrossAxisAlignment.start,
                                          children: [
                                            ConstrainedBox(
                                              constraints: const BoxConstraints(
                                                maxWidth: 140,
                                              ),
                                              child: AutoSizeText(
                                                data['foodCategory'].toString(),
                                                maxLines: 1,
                                                style: GoogleFonts.poppins(
                                                  color: CustomColors.textColor,
                                                  fontSize: 25,
                                                  fontWeight: FontWeight.w700,
                                                ),
                                              ),
                                            ),
                                            const SizedBox(
                                              height: 5,
                                            ),
                                            ConstrainedBox(
                                              constraints: const BoxConstraints(
                                                maxHeight: 70.0,
                                                maxWidth: 140,
                                              ),
                                              child: AutoSizeText(
                                                data['allergens'],
                                                minFontSize: 10,
                                                maxFontSize: 25,
                                                style: GoogleFonts.poppins(
                                                  color: CustomColors.textColor,
                                                  fontWeight: FontWeight.w500,
                                                ),
                                              ),
                                            ),
                                            const SizedBox(
                                              height: 5,
                                            ),
                                            AutoSizeText(
                                              data['ageNum'].toString() +
                                                  ' ' +
                                                  data['ageUnit'].toString(),
                                              maxLines: 1,
                                              style: GoogleFonts.poppins(
                                                color: CustomColors.textColor,
                                                fontSize: 15,
                                                fontWeight: FontWeight.w400,
                                              ),
                                            ),
                                          ],
                                        ),
                                      ],
                                    ),
                                  ),
                                );
                              },
                            ).toList(),
                    );
                  }
                  return Center(
                    child: CircularProgressIndicator(
                      color: CustomColors.textColor,
                    ),
                  );
                },
              ),
              Text(
                'Completed',
                style: GoogleFonts.poppins(
                  color: CustomColors.textColor,
                  fontSize: 20,
                  fontWeight: FontWeight.w600,
                ),
              ),
              const SizedBox(
                height: 3,
              ),
              Text(
                'Tap on a food item to view its actions.',
                style: GoogleFonts.poppins(
                  color: CustomColors.textColor,
                  fontSize: 15,
                  fontWeight: FontWeight.w400,
                ),
              ),
              const SizedBox(
                height: 15,
              ),
              StreamBuilder<QuerySnapshot>(
                stream: completedReceiptsStream,
                builder: (BuildContext context,
                    AsyncSnapshot<QuerySnapshot> snapshots) {
                  if (snapshots.connectionState == ConnectionState.active) {
                    return ListView(
                      shrinkWrap: true,
                      physics: const BouncingScrollPhysics(),
                      children: snapshots.data!.size == 0
                          ? [
                              Container(
                                height: 40,
                              )
                            ]
                          : snapshots.data!.docs.map(
                              (DocumentSnapshot document) {
                                Map<String, dynamic> data =
                                    document.data()! as Map<String, dynamic>;
                                return Padding(
                                  padding: const EdgeInsets.only(bottom: 20),
                                  child: Container(
                                    decoration: BoxDecoration(
                                      borderRadius: BorderRadius.circular(40),
                                      color: CustomColors.secondary,
                                      border: Border.all(
                                        width: 1,
                                        color: CustomColors.textColor,
                                      ),
                                    ),
                                    child: Row(
                                      children: [
                                        Padding(
                                          padding: const EdgeInsets.only(
                                            right: 15,
                                          ),
                                          child: ClipRRect(
                                            borderRadius:
                                                BorderRadius.circular(40.0),
                                            child: Image.network(
                                              data['downloadUrl'],
                                              fit: BoxFit.cover,
                                              width: 150,
                                              height: 150,
                                            ),
                                          ),
                                        ),
                                        Column(
                                          mainAxisAlignment:
                                              MainAxisAlignment.center,
                                          crossAxisAlignment:
                                              CrossAxisAlignment.start,
                                          children: [
                                            ConstrainedBox(
                                              constraints: const BoxConstraints(
                                                maxWidth: 140,
                                              ),
                                              child: AutoSizeText(
                                                data['foodCategory'].toString(),
                                                maxLines: 1,
                                                style: GoogleFonts.poppins(
                                                  color: CustomColors.textColor,
                                                  fontSize: 25,
                                                  fontWeight: FontWeight.w700,
                                                ),
                                              ),
                                            ),
                                            const SizedBox(
                                              height: 5,
                                            ),
                                            ConstrainedBox(
                                              constraints: const BoxConstraints(
                                                maxHeight: 70.0,
                                                maxWidth: 140,
                                              ),
                                              child: AutoSizeText(
                                                data['allergens'],
                                                minFontSize: 10,
                                                maxFontSize: 25,
                                                style: GoogleFonts.poppins(
                                                  color: CustomColors.textColor,
                                                  fontWeight: FontWeight.w500,
                                                ),
                                              ),
                                            ),
                                            const SizedBox(
                                              height: 5,
                                            ),
                                            AutoSizeText(
                                              data['ageNum'].toString() +
                                                  ' ' +
                                                  data['ageUnit'].toString(),
                                              maxLines: 1,
                                              style: GoogleFonts.poppins(
                                                color: CustomColors.textColor,
                                                fontSize: 15,
                                                fontWeight: FontWeight.w400,
                                              ),
                                            ),
                                          ],
                                        ),
                                      ],
                                    ),
                                  ),
                                );
                              },
                            ).toList(),
                    );
                  }
                  return Center(
                    child: CircularProgressIndicator(
                      color: CustomColors.textColor,
                    ),
                  );
                },
              ),
            ],
          ),
        ),
      ),
      SafeArea(
        child: Padding(
          padding: const EdgeInsets.only(left: 30, right: 30),
          child: ListView(
            shrinkWrap: false,
            children: [
              const SizedBox(
                height: 30,
              ),
              AutoSizeText(
                'Your Profile',
                maxLines: 2,
                style: TextStyle(
                  color: CustomColors.textColor,
                  fontFamily: "RecoletaB",
                  fontSize: 60,
                  fontWeight: FontWeight.w900,
                ),
              ),
            ],
          ),
        ),
      )
    ];

    return Scaffold(
      bottomNavigationBar: SizedBox(
        height: 100,
        child: BottomNavigationBar(
          type: BottomNavigationBarType.fixed,
          items: const <BottomNavigationBarItem>[
            BottomNavigationBarItem(
              icon: Padding(
                padding: EdgeInsets.all(5.0),
                child: Icon(
                  Icons.home,
                  size: 30,
                ),
              ),
              label: 'Home',
            ),
            BottomNavigationBarItem(
              icon: Padding(
                padding: EdgeInsets.all(8.0),
                child: Icon(FontAwesomeIcons.box),
              ),
              label: 'Donations',
            ),
            BottomNavigationBarItem(
              icon: Padding(
                padding: EdgeInsets.all(8.0),
                child: Icon(
                  FontAwesomeIcons.receipt,
                  size: 25,
                ),
              ),
              label: 'Receipts',
            ),
            BottomNavigationBarItem(
              icon: Padding(
                padding: EdgeInsets.all(8.0),
                child: Icon(
                  FontAwesomeIcons.userNinja,
                  size: 25,
                ),
              ),
              label: 'Profile',
            ),
          ],
          unselectedItemColor: const Color(0xff636e72),
          fixedColor: CustomColors.textColor,
          currentIndex: selectedIndex,
          backgroundColor: CustomColors.secondary,
          onTap: _onItemTapped,
        ),
      ),
      backgroundColor: CustomColors.secondary,
      body: Center(
        child: _widgetOptions.elementAt(selectedIndex),
      ),
    );
  }
}
